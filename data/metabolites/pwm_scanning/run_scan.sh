#!/usr/bin/env bash
# this is a sample pipeline for scanning multiple PWMs over a number of promoter regions

##### Directories #####
TFBS="/dfs/BPP/Megraw_Lab/software_downloads/tfbs_scanner"                  # location of tfbs_scan.jar
PWM_DIR="/dfs/BPP/Megraw_Lab/data/external/pwm_databases/lab_generated/pwm" # location of files of individual PWMs
OUT_DIR="$HOME/pwm_scan_output"                                             # output directory
SCORES="$OUT_DIR/scores"                                                    # location of output scores
PY_DIR="/raid1/home/bpp/gouldru/test"                                       # location of python scripts

##### Required Input Files #####
GENOME="/dfs/BPP/Megraw_Lab/data/external/genomes/TAIR/TAIR10/genome/TAIR10_chr_all.fas"
TAIR_GENES="/dfs/BPP/Megraw_Lab/data/external/genomes/TAIR/TAIR10/genes/TAIR10_GFF3_genes.gff"
INPUT_GENES="$PY_DIR/gene_sequences.fa"

##### Files Generated By This Script #####
PROMOS="$OUT_DIR/promos.gff"
PROMOS_CONTENT="$OUT_DIR/promos_content.gff"
PROMO_FA="$OUT_DIR/promos.fa"
CLEAN_PROMOS="$OUT_DIR/promos_clean.gff"
CLEAN_GENOME="$OUT_DIR/genome.fa"

##### Constants #####
NUCS_UP=1400 # nucleotides upstream of TX-start site
NUCS_DOWN=99 # nucleotides downstream of TX-start site
N_PROC=45    # number of processors to use
FP_RATE=0.01 # false-positive rate for thresholding

FP_PCT=$(printf %.0f "$(echo "$FP_RATE * 100" | bc -l)")
if [ ! -d "$OUT_DIR" ]; then
    mkdir "$OUT_DIR"
fi
if [ ! -d "$SCORES" ]; then
    mkdir "$SCORES"
fi

########################################################################################
echo "Get promoter regions from TAIR annotated gene TX-start sites and clean them"

if [ ! -f "$PROMOS" ]; then
    # Generate background sequence for thresholding
    python $PY_DIR/get_promoters.py $TAIR_GENES "$PROMOS" $NUCS_UP $NUCS_DOWN
fi

if [ ! -f "$CLEAN_GENOME" ]; then
    # fix the formatting of the genome file
    python $PY_DIR/format_genome.py $GENOME "$CLEAN_GENOME"
fi

if [ ! -f "$PROMOS_CONTENT" ]; then
    # Get nucleotide content for cleaning
    bedtools nuc -fi "$CLEAN_GENOME" -bed "$PROMOS" -s >"$PROMOS_CONTENT"
fi

if [ ! -f "$CLEAN_PROMOS" ]; then
    # Remove promoters containing ambiguous characters
    python $PY_DIR/remove_non_ATGC.py "$PROMOS_CONTENT" "$CLEAN_PROMOS"
fi

if [ ! -f "$PROMO_FA" ]; then
    # get fasta sequences for promoter regions
    bedtools getfasta -fi "$CLEAN_GENOME" -fo "$PROMO_FA" -bed "$CLEAN_PROMOS" -s
fi

# Generate threshold and scan each PWM
echo "Scanning"
for FILE in "$PWM_DIR"/*; do
    filename=$(basename -- "$FILE")
    filename="${filename%.*}"
    threshold=$OUT_DIR/"$filename"_"$FP_PCT"_pct.txt

    java -jar $TFBS/tfbs_scan.jar Thresholds "$FILE" "$PROMO_FA" $FP_RATE -n $N_PROC >"$threshold"

    java -jar $TFBS/tfbs_scan.jar Scan "$FILE" $INPUT_GENES "$filename" -n $N_PROC --minScores "$threshold" --strand FWD

    mv "$filename".FWD.scores "$SCORES"/"$filename".scores

    rm "$threshold"
    rm -- *.locations
done
